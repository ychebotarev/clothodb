
//------------------------------------------------------------------------------
// This code was generated by a tool.
//
//   Tool : Bond Compiler 0.10.0.0
//   File : record_apply.h
//
// Changes to this file may cause incorrect behavior and will be lost when
// the code is regenerated.
// <auto-generated />
//------------------------------------------------------------------------------

#pragma once

#include "record_types.h"
#include <bond/core/bond.h>
#include <bond/stream/output_buffer.h>


namespace bond
{
    
    //
    // Extern template specializations of Apply function with common
    // transforms for Record.
    //

    extern template 
    bool Apply(const ::bond::To< ::example::Record>& transform,
               const ::bond::bonded< ::example::Record>& value);

    extern template 
    bool Apply(const ::bond::InitSchemaDef& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Null& transform,
               const ::bond::bonded< ::example::Record, ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::To< ::example::Record>& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);

    extern template 
    bool Apply(const ::bond::To< ::example::Record>& transform,
               const ::bond::bonded<void,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::CompactBinaryWriter< ::bond::CompactBinaryCounter::type> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::To< ::example::Record>& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);

    extern template 
    bool Apply(const ::bond::To< ::example::Record>& transform,
               const ::bond::bonded<void,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::FastBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::To< ::example::Record>& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);

    extern template 
    bool Apply(const ::bond::To< ::example::Record>& transform,
               const ::bond::bonded<void,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Serializer< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::example::Record& value);

    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::CompactBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::FastBinaryReader< ::bond::InputBuffer>&>& value);
    
    extern template 
    bool Apply(const ::bond::Marshaler< ::bond::SimpleBinaryWriter< ::bond::OutputBuffer> >& transform,
               const ::bond::bonded< ::example::Record,  ::bond::SimpleBinaryReader< ::bond::InputBuffer>&>& value);
    
} // namespace bond
